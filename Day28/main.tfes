terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~>4.16"
    }
  }
  required_version = ">=1.2.0"
}

provider "aws" {
  region = var.aws_region
}
resource "aws_vpc" "yp_vpc" {
  cidr_block           = "10.0.0.0/16"
  enable_dns_support   = true
  enable_dns_hostnames = true
  tags = {
    Name = "yp_vpc"
  }
}

resource "aws_subnet" "yp_subnet" {
  vpc_id            = aws_vpc.yp_vpc.id
  cidr_block        = "10.0.1.0/24"
  availability_zone = "us-west-2a"
  tags = {
    Name = "yp_subnet"
  }
}
resource "aws_internet_gateway" "yp_ig" {
  vpc_id = aws_vpc.yp_vpc.id
  tags = {
    Name = "yp_ig"
  }
}
resource "aws_route_table" "yp_rt" {
  vpc_id = aws_vpc.yp_vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.yp_ig.id
  }

  tags = {
    Name = "yp_rt"
  }
}
resource "aws_route_table_association" "yp_rt_association" {
  subnet_id      = aws_subnet.yp_subnet.id
  route_table_id = aws_route_table.yp_rt.id
} 

resource "aws_security_group" "yp_terraform_instance" {
  name        = "yp_terraform_instance"
  description = "Allow HTTP and SSH access"
  vpc_id      = aws_vpc.yp_vpc.id

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"] 
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  tags = {
    Name = "yp_security_group"
  }
}

resource "aws_instance" "yp_terraform_instance" {
  ami           = var.ami_id
  instance_type = var.aws_region
  subnet_id     = aws_subnet.yp_subnet.id
  security_groups = [aws_security_group.yp_security_group.name]


  tags = {
    Name = "yp_terraform_instance"
  }
}
